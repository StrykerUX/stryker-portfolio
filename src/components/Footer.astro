---
export interface Props {
  lang?: 'es' | 'en';
}

const { lang = 'es' } = Astro.props;

const content = {
  es: {
    cta: {
      title: '¿Tienes una idea?',
      subtitle: '¡Vamos a construirla!',
      email: 'abraham.stryker117@gmail.com'
    }
  },
  en: {
    cta: {
      title: 'Have an idea?',
      subtitle: "Let's build it!",
      email: 'abraham.stryker117@gmail.com'
    }
  }
};

const text = content[lang];
---

<!-- CTA final en tarjeta de fondo claro -->
<section class="py-20 bg-white dark:bg-[#121212] transition-colors duration-300">
  <div class="container mx-auto custom-padding" style="max-width: 1880px;">
    <div class="bg-[#f7f9fa] dark:bg-black text-black dark:text-white p-12 text-center border-none" style="border-radius: 40px;">
<style>
  /* Custom padding responsive */
  .custom-padding {
    padding-left: 32px;
    padding-right: 32px;
  }
  
  @media (min-width: 768px) {
    .custom-padding {
      padding-left: 120px;
      padding-right: 120px;
    }
  }
</style>
      <!-- Mensaje principal con jerarquía de subtítulo -->
      <h2 class="text-3xl font-bold text-black dark:text-white mb-2">
        {text.cta.title}
      </h2>
      <p class="text-2xl font-bold text-black dark:text-white mb-8">
        {text.cta.subtitle}
      </p>
      
      <!-- Correo en línea con ícono sutil -->
      <div class="flex items-center justify-center space-x-3">
        <svg class="w-5 h-5 text-gray-600 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
        </svg>
        <a href={`mailto:${text.cta.email}`} class="text-lg text-gray-700 dark:text-gray-300 hover:text-black dark:hover:text-white transition-colors duration-200">
          {text.cta.email}
        </a>
      </div>
    </div>
  </div>
</section>

<!-- Footer mini -->
<footer class="py-6 bg-white border-t border-gray-100 dark:border-gray-800 transition-colors duration-300" style="background-color: var(--brand-white);">
  <div class="container mx-auto custom-padding" style="max-width: 1880px;">
    <div class="flex flex-col md:flex-row justify-between items-center">
      <!-- Tres enlaces discretos a la izquierda -->
      <div class="flex space-x-6 mb-4 md:mb-0">
        <a href="/" class="text-sm text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 transition-colors duration-200">
          {lang === 'es' ? 'Inicio' : 'Home'}
        </a>
        <a href="/portfolio" class="text-sm text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 transition-colors duration-200">
          Portfolio
        </a>
        <a href="/contacto" class="text-sm text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 transition-colors duration-200">
          {lang === 'es' ? 'Contacto' : 'Contact'}
        </a>
      </div>

      <!-- Dos botones píldora para redes a la derecha -->
      <div class="flex space-x-3">
        <a 
          href="https://linkedin.com/in/imstryker" 
          class="px-4 py-2 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-full text-xs font-medium text-gray-600 dark:text-gray-300 transition-colors duration-200"
        >
          LinkedIn
        </a>
        <a 
          href="https://twitter.com/imstryker" 
          class="px-4 py-2 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-full text-xs font-medium text-gray-600 dark:text-gray-300 transition-colors duration-200"
        >
          Twitter
        </a>
      </div>
    </div>
  </div>
</footer>

<style>
  .cta-title,
  .cta-description,
  .cta-button,
  .contact-info {
    opacity: 0;
    transform: translateY(30px);
  }

  .cta-title.visible,
  .cta-description.visible,
  .cta-button.visible,
  .contact-info.visible {
    opacity: 1;
    transform: translateY(0);
    transition: all 0.8s ease;
  }

  .contact-item {
    transition: transform 0.3s ease;
  }

  .contact-item:hover {
    transform: translateY(-4px);
  }

  .social-links a:hover {
    transform: translateY(-2px);
  }

  .newsletter-form input:focus + button {
    background-color: var(--brand-yellow);
    color: black;
  }

  .cta-section::before {
    content: '';
    position: absolute;
    inset: 0;
    background: 
      radial-gradient(circle at 20% 80%, rgba(250, 240, 21, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.05) 0%, transparent 50%);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Intersection Observer for CTA animations
    const observerOptions = {
      threshold: 0.2,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
        }
      });
    }, observerOptions);

    // Observe CTA elements
    const ctaElements = document.querySelectorAll('[data-animate^="cta"]');
    ctaElements.forEach((el, index) => {
      el.style.animationDelay = `${index * 0.2}s`;
      observer.observe(el);
    });

    // Newsletter form
    const newsletterForm = document.querySelector('.newsletter-form');
    if (newsletterForm) {
      newsletterForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const email = newsletterForm.querySelector('input[type="email"]').value;
        
        // Simple validation
        if (email && email.includes('@')) {
          // Here you would integrate with your newsletter service
          alert('¡Gracias por suscribirte!');
          newsletterForm.reset();
        } else {
          alert('Por favor, introduce un email válido.');
        }
      });
    }

    // Smooth scroll for internal links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
  });
</script>